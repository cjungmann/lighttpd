#!/usr/bin/env bash

is_root() { [[ "$EUID" -eq 0 ]]; }

pause_for_keypress() { read -n 1 -p "Press any key to continue."; }

reset_screen()       { echo -n "[2J[0;0f"; }
unset_text_colors()  { echo -n "[0m"; }

is_disabling_site()  { [ "$LDISSITE" ]; }

set_text_background()
{
    case "$1" in
        default) echo -n "[49m" ;;
        black)   echo -n "[40m" ;;
        red)     echo -n "[41m" ;;
        green)   echo -n "[42m" ;;
        brown)   echo -n "[43m" ;;
        yellow)  echo -n "[43m" ;;
        blue)    echo -n "[44m" ;;
        magenta) echo -n "[45m" ;;
        cyan)    echo -n "[46m" ;;
        white)   echo -n "[47m" ;;
    esac
}

set_text_foreground()
{
    case "$1" in
        black)   echo -n "[30m"   ;;
        grey)    echo -n "[1;30m" ;;
        red)     echo -n "[1;31m" ;;
        green)   echo -n "[1;32m" ;;
        brown)   echo -n "[2;33m" ;;
        yellow)  echo -n "[1;33m" ;;
        blue)    echo -n "[1;34m" ;;
        magenta) echo -n "[1;35m" ;;
        cyan)    echo -n "[1;36m" ;;
        white)   echo -n "[1;37m" ;;
    esac
}

cecho()
{
    local msg="$1"
    local color="${2:-green}"
    local background="${3:-default}"

    set_text_background "$background"
    set_text_foreground "$color"
    echo "${msg}[0m"
}

test_environment()
{
    if [ -d /etc/lighttpd ]; then
        if [ -d /etc/lighttpd/sites-available ]; then
            return 0
        else
            cecho "LightTPD sites-available directory doesn't exist." red
            exit 1
        fi
    else
        cecho "LightTPD is not installed on this computer." red
        exit 1
    fi
}

enable_site()
{
    local fname="$1.conf"
    local enpath="/etc/lighttpd/sites-enabled"
    local avpath="/etc/lighttpd/sites-available"

    if is_root; then
        if [ -L "$enpath/$fname" ]; then
            echo "$1 is already enabled."
        else
            cd "$enpath"
            cp -s "$avpath/$fname" "$fname"
            cd - > /dev/null
        fi
    else
        echo "Must be root to enable or disable a site."
    fi
    
}

disable_site()
{
    local fname="$1.conf"
    local enpath="/etc/lighttpd/sites-enabled"
    local avpath="/etc/lighttpd/sites-available"

    if is_root; then
        if [ -L "$enpath/$fname" ]; then
            cd "$enpath"
            unlink "$fname"
            cd - > /dev/null
        else
            echo "$1 is not enabled."
        fi
    else
        echo "Must be root to enable or disable a site."
    fi
    
}

toggle_site_conf()
{
    local fname="$1"
    local enpath="/etc/lighttpd/sites-enabled"
    local avpath="/etc/lighttpd/sites-available"
    if [ -L "$enpath/$fname" ]; then
        unlink "$enpath/$fname"
    else
        cd "$enpath"
        cp -s "$avpath/$fname" "$fname"
        cd -
    fi
}

get_user_input()
{
    cd /etc/lighttpd/sites-available
    local -a avail=( *.conf  )
    cd -

    declare fname
    declare -i ndx=0
    declare kpressed

    until [ "$kpressed" == 'q' ]; do
        reset_screen

        echo "Available sites.  Enabled sites are undetermined color"
        echo
        ndx=0
        for fname in "${avail[@]}"; do
            if [ -f "/etc/lighttpd/sites-enabled/$fname" ]; then
                set_text_foreground "blue"
            fi
            printf "%2d: %s\n" $(( ++ndx )) "$fname"
            unset_text_colors
        done
        echo

        if is_root; then
            read -p "Type a number (or 'q' to exit) and ENTER to toggle the site. " kpressed

            if [[ "$kpressed" =~ [0-9]+ ]]; then
                ndx="$kpressed"
                if [ $ndx -le "${#avail[@]}" ]; then
                    fname="${avail[$(( $ndx-1 ))]}"
                    toggle_site_conf "$fname"
                else
                    echo "$ndx is out of the range of file indexes."
                fi
            fi
        else
            kpressed=q
        fi
    done
}

## Begin execution here:

test_environment

if [ $# -eq 0 ]; then
    get_user_input
elif is_disabling_site; then
    disable_site "$1"
else
    enable_site "$1"
fi

